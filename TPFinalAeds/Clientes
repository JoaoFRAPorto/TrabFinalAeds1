#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_CLIENTES 100

typedef struct {
    int codigo;
    char nome[50];
    char endereco[100];
    char telefone[20];
} Cliente;

Cliente clientes[MAX_CLIENTES];
int totalClientes = 0;

void cadastrarCliente() {
    if (totalClientes < MAX_CLIENTES) {
        Cliente novoCliente;
        novoCliente.codigo = totalClientes + 1;
        printf("Nome do cliente: ");
        scanf("\n%*c", novoCliente.nome);
        printf("Endereço do cliente: ");
        scanf("\n%*c", novoCliente.endereco);
        printf("Telefone do cliente: ");
        scanf("\n%*c", novoCliente.telefone);

        clientes[totalClientes++] = novoCliente;
        printf("Cliente cadastrado com sucesso!\n");
    } else {
        printf("Limite de clientes atingido.\n");
    }
}

void pesquisarCliente() {
    int codigo;
    char nome[50];

    printf("Digite o código ou nome do cliente: ");
    scanf("%d", &codigo);
    fgets(nome, sizeof(nome), stdin); // Para ignorar a quebra de linha

    for (int i = 0; i < totalClientes; i++) {
        if (clientes[i].codigo == codigo || strcasecmp(clientes[i].nome, nome) == 0) {
            printf("Código: %d\n", clientes[i].codigo);
            printf("Nome: %s\n", clientes[i].nome);
            printf("Endereço: %s\n", clientes[i].endereco);
            printf("Telefone: %s\n", clientes[i].telefone);
            return;
        }
    }
    printf("Cliente não encontrado.\n");
}

void carregarDadosClientes() {
    FILE *file = fopen("clientes.dat", "rb");
    if (file != NULL) {
        fread(&totalClientes, sizeof(int), 1, file);
        fread(clientes, sizeof(Cliente), totalClientes, file);
        fclose(file);
    }
}

void salvarDadosClientes() {
    FILE *file = fopen("clientes.dat", "wb");
    fwrite(&totalClientes, sizeof(int), 1, file);
    fwrite(clientes, sizeof(Cliente), totalClientes, file);
    fclose(file);
}
